.story{
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, .1);
  background-color: rgba($color-white, .6);
  border-radius:  3px;
  padding: 4rem 6rem 6rem 9rem;
  font-size: $default-font-size;
  transform: skewX(-12deg);



  &:not(:last-child) {
    margin: 0  auto 8rem auto;
  }

  @include respond(tab-port) {
    width: 100%;
    padding: 2rem 4rem 4rem 7rem;

  }

  @include respond(phone){
    transform: skewX(0);
  }


  &__shape{
    width: 15rem;
    height: 15rem;
    float: left;
    background-color: #28b485;
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%); // first - radius, then position in the center. For this to work, the element HAS to have dimensions defined and also float.
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg) ; /// this is to add some space between the circle and the text. It is better this way than using margin since this is a floated element
    // beacuse we used "transform" to translate the circle, the transform to skew couldn't work - we can;t use transform property twice so it's just added here
    position: relative;
    overflow: hidden;

    @include respond(phone){
      transform: translateX(-3rem) skewX(0) ;
    }



  }

  &__img{
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    backface-visibility: hidden; /// when something weird happens with animation this usually fixes it. But why? Idk.
    transition: all .5s;
    overflow: hidden;


  }
  &__text{
    transform: skewX(12deg);
    @include respond(phone){
      transform:  skewX(0) ;
    }
  }
  &__caption{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,20%);
    opacity: 0;
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.8rem;
    text-align: center;
    transition: all .5s;
    backface-visibility: hidden;

  }
  &:hover &__caption{
    opacity: 1;
    transform: translate(-50%, -50%);
  }
  &:hover &__img{
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%);
  }
}